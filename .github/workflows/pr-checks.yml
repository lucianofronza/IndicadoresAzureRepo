name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # Job 1: Valida√ß√£o de t√≠tulo do PR
  validate-pr-title:
    name: Validate PR Title
    runs-on: ubuntu-latest
    
    steps:
      - name: Validate PR title format
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
          subjectPattern: ^[A-Z].+$
          subjectPatternError: |
            O t√≠tulo do PR deve come√ßar com letra mai√∫scula.
            Exemplo: "feat: adicionar testes unit√°rios"

  # Job 2: Verificar altera√ß√µes sens√≠veis
  check-sensitive-files:
    name: Check Sensitive Files
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check for sensitive files
        run: |
          echo "Checking for sensitive files..."
          if git diff --name-only origin/${{ github.base_ref }}..HEAD | grep -E '\.env$|\.env\.local$|\.env\.production$|secret|password|key\.pem$'; then
            echo "::error::Sensitive files detected in PR. Please remove them."
            exit 1
          fi
          echo "‚úÖ No sensitive files detected"

  # Job 3: An√°lise de Tamanho do PR
  analyze-pr-size:
    name: Analyze PR Size
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Calculate PR size
        id: pr-size
        run: |
          additions=$(git diff --numstat origin/${{ github.base_ref }}..HEAD | awk '{sum+=$1} END {print sum}')
          deletions=$(git diff --numstat origin/${{ github.base_ref }}..HEAD | awk '{sum+=$2} END {print sum}')
          total=$((additions + deletions))
          
          echo "additions=$additions" >> $GITHUB_OUTPUT
          echo "deletions=$deletions" >> $GITHUB_OUTPUT
          echo "total=$total" >> $GITHUB_OUTPUT
          
          echo "üìä PR Size Analysis:"
          echo "  + Additions: $additions lines"
          echo "  - Deletions: $deletions lines"
          echo "  Total: $total lines"
          
          if [ $total -gt 1000 ]; then
            echo "::warning::This PR is large ($total lines). Consider breaking it into smaller PRs for easier review."
          fi

  # Job 4: Verificar Cobertura de Testes
  test-coverage:
    name: Test Coverage Report
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        working-directory: backend
        run: npm ci
      
      - name: Run tests with coverage
        working-directory: backend
        run: npm test -- --coverage --ci --maxWorkers=2
      
      - name: Generate coverage report
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: backend
          test-script: npm test -- --coverage
          annotations: failed-tests
          package-manager: npm
          skip-step: install

  # Job 5: Verificar Tipos TypeScript
  typecheck:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Check Backend types
        working-directory: backend
        run: |
          npm ci
          npx tsc --noEmit
      
      - name: Check Frontend types
        working-directory: frontend
        run: |
          npm ci
          npx tsc --noEmit

  # Job 6: Coment√°rio com Resumo
  pr-comment:
    name: Post PR Summary
    runs-on: ubuntu-latest
    needs: [test-coverage, analyze-pr-size]
    if: always()
    
    steps:
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const body = `
            ## ü§ñ PR Automated Review
            
            ‚úÖ All automated checks completed!
            
            ### üìä Summary
            - **Tests**: ${{ needs.test-coverage.result }}
            - **PR Size**: ${{ needs.analyze-pr-size.result }}
            
            ### üìù Next Steps
            1. Review the test coverage report above
            2. Ensure all checks pass
            3. Request review from team members
            
            ---
            *Automated by GitHub Actions*
            `;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
